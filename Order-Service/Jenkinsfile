pipeline {
    agent any

    environment {
        PATH = "/usr/local/bin:$PATH"
    }

    tools {
        maven 'Maven' // Must match your Jenkins Global Tool Config
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/saif78692/order-service.git'
            }
        }

        stage('Build') {
            steps {
                dir('Order-Service') {
                    sh 'mvn clean package -DskipTests'
                }
            }
        }

        stage('Test') {
            steps {
                dir('Order-Service') {
                    sh 'mvn test'
                }
            }
        }

        stage('Docker Build & Push') {
            steps {
                dir('Order-Service') {
                    withCredentials([usernamePassword(
                        credentialsId: 'dockerhub-credentials',
                        usernameVariable: 'DOCKER_USER',
                        passwordVariable: 'DOCKER_PASS'
                    )]) {
                        sh '''
                            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
                            docker build -t saifsh786/order-service:1.0 .
                            docker push saifsh786/order-service:1.0
                        '''
                    }
                }
            }
        }

        // ðŸ”Ž Add this stage just before deploy
        stage('Test SSH to EC2') {
            steps {
                sshagent(['ec2-credentials']) {
                    sh 'ssh -o StrictHostKeyChecking=no ec2-user@3.80.195.203 "echo SUCCESS: Jenkins can connect"'
                }
            }
        }

        stage('Deploy to EC2') {
            steps {
                sshagent(['ec2-credentials']) {
                    sh '''
                        ssh -o StrictHostKeyChecking=no ec2-user@3.80.195.203 '
                        docker pull saifsh786/order-service:1.0 &&
                        docker stop order || true &&
                        docker rm order || true &&
                        docker run -d -p 8080:8080 --name order saifsh786/order-service:1.0
                        '
                    '''
                }
            }
        }
    }
}
